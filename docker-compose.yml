#
# Ci-dessous la config qui permet de lancer qualimarc-docker
#
# Remarque: avant de lancer docker-compose up, il faut régler le fichier .env
# en partant du fichier .env-dist qui donne les variables d'environnements
# à personnaliser et des exemples de valeurs.
#

version: "3.5"

services:

  ####################################
  # Interface utilisateur de qualimarc
  # ----------------------------------
  # (basé sur vuejs)
  qualimarc-front:
    image: abesesr/qualimarc:${QUALIMARC_FRONT_VERSION}
    container_name: qualimarc-front
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    environment:
      QUALIMARC_FRONT_API_BASEURL: ${QUALIMARC_FRONT_API_BASEURL}
    ports:
      - ${QUALIMARC_FRONT_HTTP_PORT}:80
    depends_on:
      - qualimarc-api
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=nginx"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=qualimarc-watchtower-scope"



  ############################
  # qualimarc-api
  # API de qualimarc
  # (écrite en java spring boot)
  qualimarc-api:
    image: abesesr/qualimarc:${QUALIMARC_API_VERSION}
    container_name: qualimarc-api
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    environment:
      # Pour basculer sur bon application-xxx.properties préalablement embarqué
      # dans le code ici:
      # https://github.com/abes-esr/abes-hello-back/tree/develop/web/src/main/resources/
      SPRING_PROFILES_ACTIVE: ${QUALIMARC_API_SPRING_PROFILES_ACTIVE}
      # Pour surcharger les paramètres spring du application-xxx.properties
      # ci-dessous via le système de .env de docker
      # https://www.linkedin.com/pulse/externalizing-properties-spring-boot-application-docker-phani-bushan
      # pour la liste de tous les champs qu'on peut surcharger,
      # voir le contenu des application-xxx.properties embarqués dans le code sources
      SPRING_DATASOURCE_QUALIMARC_JDBCURL: 'jdbc:postgresql://qualimarc-db:5432/qualimarc'
      SPRING_DATASOURCE_QUALIMARC_USERNAME: ${QUALIMARC_DB_POSTGRES_USER}
      SPRING_DATASOURCE_QUALIMARC_PASSWORD: ${QUALIMARC_DB_POSTGRES_PASSWORD}
      SPRING_DATASOURCE_BASEXML_JDBCURL: ${QUALIMARC_API_SPRING_DATASOURCE_BASEXML_JDBCURL}
      SPRING_DATASOURCE_BASEXML_USERNAME: ${QUALIMARC_API_SPRING_DATASOURCE_BASEXML_USERNAME}
      SPRING_DATASOURCE_BASEXML_PASSWORD: ${QUALIMARC_API_SPRING_DATASOURCE_BASEXML_PASSWORD}
      JWT_SECRET: ${QUALIMARC_API_JWT_SECRET}
      JWT_ANONYMOUSUSER: ${QUALIMARC_API_JWT_ANONYMOUS_USER}
      # Pour signaler à Java qu'il peut utiliser toute (95%) la RAM dispo qu'on limite par ailleurs avec le paramètre plus haut mem_limit
      JVM_OPTS: "-XX:MaxRAMPercentage=95"
    ports:
      - ${QUALIMARC_API_HTTP_PORT}:8082
    depends_on:
      - qualimarc-db
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=java-spring"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=qualimarc-watchtower-scope"


  qualimarc-batch:
    image: abesesr/qualimarc:${QUALIMARC_BATCH_VERSION}
    container_name: qualimarc-batch
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
      - ${QUALIMARC_BATCH_STAT_WORKDIR}:/stat/
    environment:
      QUALIMARC_BATCH_AT_STARTUP: ${QUALIMARC_BATCH_AT_STARTUP}
      QUALIMARC_BATCH_CRON: ${QUALIMARC_BATCH_CRON}
      QUALIMARC_BATCH_CRON_FLUSH: ${QUALIMARC_BATCH_CRON_FLUSH}
      # Pour basculer sur bon application-xxx.properties préalablement embarqué
      # dans le code ici:
      # https://github.com/abes-esr/abes-hello-back/tree/develop/batch/src/main/resources/
      SPRING_PROFILES_ACTIVE: ${QUALIMARC_API_SPRING_PROFILES_ACTIVE}
      # Pour surcharger les paramètres spring du application-xxx.properties
      # ci-dessous via le système de .env de docker
      # https://www.linkedin.com/pulse/externalizing-properties-spring-boot-application-docker-phani-bushan
      # pour la liste de tous les champs qu'on peut surcharger,
      # voir le contenu des application-xxx.properties embarqués dans le code sources
      SPRING_DATASOURCE_QUALIMARC_JDBCURL: 'jdbc:postgresql://qualimarc-db:5432/qualimarc'
      SPRING_DATASOURCE_QUALIMARC_USERNAME: ${QUALIMARC_DB_POSTGRES_USER}
      SPRING_DATASOURCE_QUALIMARC_PASSWORD: ${QUALIMARC_DB_POSTGRES_PASSWORD}
      # Pour signaler à Java qu'il peut utiliser toute (95%) la RAM dispo qu'on limite par ailleurs avec le paramètre plus haut mem_limit
      JVM_OPTS: "-XX:MaxRAMPercentage=95"
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=java-spring"
      # pour que les mises à jour de cette image soient auto-déployées par watchtower
      - "com.centurylinklabs.watchtower.scope=qualimarc-watchtower-scope"

  ##############################
  # qualimarc-db
  # Base de données postgresql de qualimarc
  qualimarc-db:
    image: abesesr/postgres-fr_fr:15.1.0
    container_name: qualimarc-db
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    environment:
      # cf https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
      POSTGRES_DB: "qualimarc"
      POSTGRES_USER: ${QUALIMARC_DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${QUALIMARC_DB_POSTGRES_PASSWORD}
    volumes:
      - ./volumes/qualimarc-db/pgdata/:/var/lib/postgresql/data/
    # todo delete( test en dev)
    ports:
      - 5432:5432
      #- 11083:5432
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=postgresql"



  #################################
  # qualimarc-db-adminer
  # Interface d'admin de postgresql
  qualimarc-db-adminer:
    image: adminer:4.8.1
    container_name: qualimarc-db-adminer
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    ports:
      - ${QUALIMARC_DB_ADMINER_HTTP_PORT}:8080
    depends_on:
      - qualimarc-db
    environment:
      ADMINER_DEFAULT_SERVER: "qualimarc-db"
    logging:
      driver: none # pas de log pour adminer pour ne pas polluer



  #######################################
  # qualimarc-db-dumper
  # Dump de la base de données postgresql
  # (dump tous les jours pour les sauvegardes)
  # https://github.com/tiredofit/docker-db-backup
  qualimarc-db-dumper:
    image: tiredofit/db-backup:4.0.35
    container_name: qualimarc-db-dumper
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
        - ./volumes/qualimarc-db/dump/:/backup/
        - ./volumes/qualimarc-db-dumper/script/:/assets/scripts/post/:w
    depends_on:
        - qualimarc-db
    environment:
      # DB_DUMP_BEGIN: "0130" <= tous les jours à 1h30 du matin GMT
      # DB_DUMP_FREQ: 1440 <= chaque jour
      # DB_CLEANUP_TIME: 10080 (1440*7) <= conserve uniquement les 7 derniers jours
      DB_TYPE: "pgsql"
      DB_HOST: "qualimarc-db"
      DB_NAME: "qualimarc"
      DB_USER: ${QUALIMARC_DB_POSTGRES_USER}
      DB_PASS: ${QUALIMARC_DB_POSTGRES_PASSWORD}
      DEFAULT_BACKUP_BEGIN: "0130"
      DEFAULT_BACKUP_INTERVAL: 1440
      DEFAULT_CLEANUP_TIME: 10080
      DEFAULT_COMPRESSION: "GZ"
      DEBUG_MODE: "false"
      CONTAINER_ENABLE_SCHEDULING: "false"
      CONTAINER_ENABLE_MONITORING: "false"
      DEFAULT_POST_SCRIPT: /assets/scripts/post/script.sh
      NOTIFICATION_SLACK_HOOK_URL: ${QUALIMARC_DB_DUMPER_NOTIFICATION_SLACK_HOOK_URL}
      NOTIFICATION_SLACK_IDENTIFIER: ${QUALIMARC_DB_DUMPER_NOTIFICATION_SLACK_IDENTIFIER}
    labels:
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=adhoc"
      # log multiline aussi pour ce conteneur avec des lignes qui ressemblent à ceci:
      # 2022-08-01.14:55:00 [NOTICE] ** [db-backup] Dumping PostgresSQL database: 'qualimarc' and compressing with 'gzip'
      - "co.elastic.logs/multiline.type=pattern"
      - "co.elastic.logs/multiline.pattern='^.*Dumping PostgresSQL database'"
      - "co.elastic.logs/multiline.negate=true"
      - "co.elastic.logs/multiline.match=after"



  #######################################
  # qualimarc-watchtower
  # Conteneur chargé de mettre à jour automatiquement toutes les N secondes
  # les images docker des conteneurs surveillés (via le système de label/scope de watchtower)
  # plus d'info : https://containrrr.dev/watchtower
  # cf README.md pour explications : https://github.com/abes-esr/qualimarc-docker#d%C3%A9ploiement-continu
  qualimarc-watchtower:
    image: containrrr/watchtower:1.4.0
    container_name: qualimarc-watchtower
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 60
      WATCHTOWER_DEBUG: "false"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
      WATCHTOWER_WARN_ON_HEAD_FAILURE: "never"
      WATCHTOWER_RUN_ONCE: ${QUALIMARC_WATCHTOWER_RUN_ONCE}
      WATCHTOWER_NOTIFICATIONS: "slack"
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${QUALIMARC_WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL}
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: ${QUALIMARC_WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER}
      WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: "#notif-qualimarc"
      WATCHTOWER_SCOPE: "qualimarc-watchtower-scope"
    labels:
      - "com.centurylinklabs.watchtower.scope=qualimarc-watchtower-scope"



