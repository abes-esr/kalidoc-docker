#
# Ci-dessous la config qui permet de lancer qualimarc
#
# Remarque: avant de lancer docker-compose up, il faut régler le fichier .env
# en partant du fichier .env-dist qui donne les variables d'environnements
# à personnaliser et des exemples de valeurs.
#

version: "3"

services:

  ####################################
  # Interface utilisateur de qualimarc
  # ----------------------------------
  # (basé sur vuejs)
  qualimarc-front:
    image: abesesr/qualimarc:${QUALIMARC_FRONT_VERSION}
    container_name: qualimarc-front
    restart: unless-stopped
    environment:
      QUALIMARC_VUE_APP_ROOT_API: ${QUALIMARC_VUE_APP_ROOT_API}
    ports:
      - ${QUALIMARC_FRONT_HTTP_PORT}:80
    depends_on:
      - qualimarc-api
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=nginx"
      # pour que les mises à jour de cette image soient auto-déployées
      # par watchtower cf docker-compose.watchtower.yml
      - "com.centurylinklabs.watchtower.scope=qualimarc-watchtower-scope"   



  ############################
  # API de qualimarc
  # --------------------------
  # (basé sur spring boot)
  qualimarc-api:
    image: abesesr/qualimarc:${QUALIMARC_API_VERSION}
    container_name: qualimarc-api
    restart: unless-stopped
    environment:
      # Pour basculer sur bon application-xxx.properties préalablement embarqué
      # dans le code ici:
      # https://github.com/abes-esr/abes-hello-back/tree/develop/web/src/main/resources/
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      # Pour surcharger les paramètres spring du application-xxx.properties
      # ci-dessous via le système de .env de docker
      # https://www.linkedin.com/pulse/externalizing-properties-spring-boot-application-docker-phani-bushan
      # pour la liste de tous les champs qu'on peut surcharger,
      # voir le contenu des application-xxx.properties embarqués dans le code sources
      SPRING_DATASOURCE_QUALIMARC_JDBCURL: 'jdbc:postgresql://qualimarc-db:5432/qualimarc'
      SPRING_DATASOURCE_QUALIMARC_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_QUALIMARC_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_BASEXML_JDBCURL: ${SPRING_DATASOURCE_BASEXML_JDBCURL}
      SPRING_DATASOURCE_BASEXML_USERNAME: ${SPRING_DATASOURCE_BASEXML_USERNAME}
      SPRING_DATASOURCE_BASEXML_PASSWORD: ${SPRING_DATASOURCE_BASEXML_PASSWORD}
    ports:
      - ${QUALIMARC_API_HTTP_PORT}:8082
    depends_on:
      - qualimarc-db
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=java-spring"
      # pour que les mises à jour de cette image soient auto-déployées
      # par watchtower cf docker-compose.watchtower.yml
      - "com.centurylinklabs.watchtower.scope=qualimarc-watchtower-scope"   



  ##############################
  # Base de données de qualimarc
  # ----------------------------
  # (basé sur un conteneur postgresql)
  qualimarc-db:
    image: abesesr/postgres-fr_fr:14.3.0
    container_name: qualimarc-db
    restart: unless-stopped
    environment:
      # cf https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
      POSTGRES_DB: "qualimarc"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./volumes/qualimarc-db/pgdata/:/var/lib/postgresql/data/
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=postgresql"



  #######################################
  # Dump de la base de données postgresql
  # -------------------------------------
  # (dump tous les jours pour les sauvegardes)
  # https://github.com/tiredofit/docker-db-backup
  qualimarc-db-dumper:
    image: tiredofit/db-backup:3.3.11
    container_name: qualimarc-db-dumper
    restart: unless-stopped
    volumes:
        - ./volumes/qualimarc-db/dump/:/backup/
    depends_on:
        - qualimarc-db
    environment:
      # DB_DUMP_BEGIN: "0130" <= tous les jours à 1h30 du matin GMT
      # DB_DUMP_FREQ: 1440 <= chaque jour
      # DB_CLEANUP_TIME: 10080 (1440*7) <= conserve uniquement les 7 derniers jours
      DB_TYPE: "pgsql"
      DB_HOST: "qualimarc-db"
      DB_NAME: "qualimarc"
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_DUMP_BEGIN: "0130"
      DB_DUMP_FREQ: 1440
      DB_CLEANUP_TIME: 10080
      SPLIT_DB: "true"
      COMPRESSION: "GZ"
      DEBUG_MODE: "false"
      CONTAINER_ENABLE_SCHEDULING: "false"
      CONTAINER_ENABLE_MONITORING: "false"
    labels:
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=qualimarc"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=adhoc"
      # log multiline aussi pour ce conteneur avec des lignes qui ressemblent à ceci:
      # 2022-08-01.14:55:00 [NOTICE] ** [db-backup] Dumping PostgresSQL database: 'qualimarc' and compressing with 'gzip'
      - "co.elastic.logs/multiline.type=pattern"
      - "co.elastic.logs/multiline.pattern='^.*Dumping PostgresSQL database'"
      - "co.elastic.logs/multiline.negate=true"
      - "co.elastic.logs/multiline.match=after"



